import argparse
import hashlib
import json
import os
import pprint
import re

import requests

# downloads the scan report for a given md5 and architecture
def download(md5, name, arch):
    params = {'apikey': 'af1adc91f951f98e63e3a49ca2f7a6b72e1d5470c6df0f3797d7d7c21b03e53a', 'resource': md5}
    headers = {
        "Accept-Encoding": "gzip, deflate"
    }
    base = "https://www.virustotal.com/vtapi/v2/"
    download_url = base + "file/report"
    response = requests.get(download_url, params=params, headers=headers)
    downloaded_file = response.json()

    if downloaded_file is not None:
        print "got content"
        path = os.getcwd() + "/IOCS/" + arch + "/" + name
        malware_file = open(path, "wb")
        malware_file.write(json.dumps(downloaded_file))
        malware_file.close()
        print "Malware Downloaded to the file" + nam

def main():
    opt = argparse.ArgumentParser(description="Search and download from VirusTotal")
    opt.add_argument("MD5", help="Enter the Md5 Hash")
    opt.add_argument("-a", help="enter malware architecture")
    options = opt.parse_args()
    md5 = options.MD5
    arch = options.a
    name = arch + "-" + md5 + ".json"
    download(md5, name, arch)


if __name__ == '__main__':
    main()

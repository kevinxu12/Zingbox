import argparse
import json
import pprint
import re


def readFile():
    arch = "ARM_LSB_32"
    md5 = "f8462f0043de8e6be8f84c7e2ca9c660af9cadb325b245e0e8e527d5b502a589"
    filename = arch + "-" + md5 + ".strace"
    strace_file = open(filename, "r")
    contents = strace_file.readlines()
    return contents


# Searches for attributes like sendto, bind, receive, etc in a given strace file and returns a list of them. 
# Only iterates through contents of the file once
def fastparse(contents, list_attributes):
    dic = {}
    result_dic = {}
    for attr in list_attributes:
        attr_dic = {}
        attr_dic["reg-expr"] = re.escape(attr) + r'\(.+$'
        attr_dic["list"] = []
        dic[attr] = attr_dic
    list_attributes.append("ips")
    attr_ips = {}
    attr_ips["reg-expr"] = r'(?<=inet_addr\(\").+?(?=\"\))'
    attr_ips["list"] = []
    dic["ips"] = attr_ips

    for line in contents:
        for attr in list_attributes:
            result = re.search(dic[attr]["reg-expr"], line)
            if result is not None:
                dic[attr]["list"].append(result.group(0))
    for key in dic.keys():
        result_dic[key] = dic[key]["list"]
    return result_dic


if __name__ == '__main__':
    parser = argparse.ArgumentParser("THe Parser for Strace")
    parser.add_argument("-l", dest="list_attributes", nargs="+",
                        help="list which strings you want to search for e.g. sendto")
    options = parser.parse_args()
    list_attributes = options.list_attributes
    fastparse(readFile(), list_attributes)

#!/bin/sh

# Test cron script
logfile="/home/ubuntu/logfile_$1.txt"

echo "Hello, Cron at `uptime`"
echo "QEMU setup script running time: starts at `date`" > $logfile

# arguments -- passed in the cron job; checks respective directories must also quit qemu once process ends (from within the emulator script)
if [ "$1" = "" ]; then
	echo "New or invalid malware architecture -- not found"
	echo "USAGE: sh qemu_setup_script <architecture> <malware_sample_name> (optional argument #3)"
	exit
else
	arch=$1
fi

echo $arch
cd $arch

lockfile='lockfile_reduce_risk.txt'
portfile='portnum_check.txt'
monfile='monitor.txt'

#each lockfile will be present in the respective architecture directory


if [ -f $lockfile ]; then
    	echo "File Already Exists"
	exit
fi

#defining port number for qemu-arm/mips
cd ..
portnum=`python gen_portnum.py "$1" `
#  [ "$1" = "MIPS_LSB_32" ] 
#then
#	portnum=5555
#
#elif [ "$1" = "ARM_LSB_32" ]
# then
# 	portnum=6666
# elif [ "$1" = "MIP_MSB_32" ]
# then
# 	portnum=7777
# elif [ $1 = "OTHER" ]
# then
# 	arch="Plou_New"
# else
	# echo "New or Invalid malware architecture"
	# exit
# fi
cd $arch
monnum=1
echo "$portnum"


portfile_num=`cat $portfile`
mon_num=`cat $monfile`
echo "portfile reads $portfile_num"
echo "existing monitor number reads $mon_num"
portnum_up=`expr $portnum + 1`
echo "portfile + 1 reads $portnum_up"
monitor_up=`expr $monnum + 1`
echo "monitor + 1 reads $monitor_up"
#check here, for the port_file; if it does not exist, write $portnum into the file; it exists, {{cat port_file}} for the portnum and +/-1 depending on number

if [ -f $portfile ]; then
	echo "portfile exists"
	if [ "$portfile_num" = $portnum ];
	then
		new_portnum=$portnum_up
		echo "New port number is $new_portnum"

		# write the new/unchanged portnum into the file
		echo "$new_portnum" >| $portfile
	else	
		new_portnum=$portnum
		echo "$portnum -- no change"

		# write the new/unchanged portnum into the file
		echo "$new_portnum" >| $portfile
	fi
else
	echo "no $portfile for $1" >> $logfile
	new_portnum=$portnum
	echo "$new_portnum" >| $portfile
fi
if [ -f $monfile ]; then
	if [ "$mon_num" = $monnum ]; then
		echo $monitor_up
		new_monitor=$monitor_up
		echo "monitor is moving up to  $new_monitor"
		#alternate +1
		echo "$new_monitor" >| $monfile
	else
		new_monitor=$monnum
		echo "monitor is moving down to $monnum"
		#alternate -1
		echo "$new_monitor" >| $monfile
	fi
#write the new/unchanged portnum into the file
else
	echo "no $monfile for $1 found" >> logfile
	new_monitor=$monnum
	echo $new_monitor >| $monfile
fi
date >  $lockfile

#go back one folder up

cd ..

echo "Running time: starts at ", `date`

echo "Pre-specified sample to process: $2" >> $logfile
if [ "`find . -name $2`" = "" ]; then
	echo "No such sample found" >> $logfile
	exit
else
	cd INCOMING/$arch
	if [ -f $2 ]; then
		echo "Sample found in the INCOMING folder" >> $logfile
		cd ..
		cd ..
		echo "Running QEMU directly, without querying VT API"
		cd $1
	 	sh snapshot_run.sh $new_portnum $new_monitor			
		echo "Done setting up qemu snapshot"
	else
		echo "No such sample in said directory $arch" >> $logfile
		exit
	fi
fi

echo "Running time: finish at ", `date`

cd "/home/ubuntu/$arch"
cd ..

